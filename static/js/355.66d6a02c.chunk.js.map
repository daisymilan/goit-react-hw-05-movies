{"version":3,"file":"static/js/355.66d6a02c.chunk.js","mappings":"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","sources":["api/api.js","webpack://goit-react-hw-05-movies/./src/components/CastListItem/CastListItem.module.css?e493","components/CastListItem/CastListItem.jsx","webpack://goit-react-hw-05-movies/./src/components/Cast/CastList.module.css?4006","components/Cast/CastList.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'b86981a07e5296001ff10a61d56b5942';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get('trending/movie/day');\n  return response.data.results;\n};\n\nexport const fetchMovieByQuery = async (movieName) => {\n  const response = await axios.get(`search/movie?query=${movieName}`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async (movieId) => {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async (movieId) => {\n  const response = await axios.get(`movie/${movieId}/credits`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async (movieId) => {\n  const response = await axios.get(`movie/${movieId}/reviews`);\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"castItem\":\"CastListItem_castItem__8qR4c\",\"profileImage\":\"CastListItem_profileImage__e39Jm\",\"actorName\":\"CastListItem_actorName__z9Z6j\"};","import PropTypes from 'prop-types';\nimport css from './CastListItem.module.css';\n// import { Link } from 'react-router-dom';\n\nexport const CastListItem = ({ id, profilePath, originalName, name, character }) => {\n  return (\n    <li className={css.castItem}>\n      <img\n        className={css.profileImage}\n        src={profilePath ? `https://image.tmdb.org/t/p/w300${profilePath}` : 'https://via.placeholder.com/300'}\n        alt={name}\n      />\n      <h3>{name}</h3>\n      <p>{originalName}</p>\n      <p>{character}</p>\n    </li>\n  );\n};\n\nCastListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  profilePath: PropTypes.string,\n  originalName: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"CastList_title__yDIpz\",\"castList\":\"CastList_castList__MSaJ7\",\"noCast\":\"CastList_noCast__XHsfa\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'api/api';\nimport { CastListItem } from '../CastListItem/CastListItem'; \nimport css from './CastList.module.css';\n\nconst CastList = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const response = await fetchMovieCast(movieId);\n        setCast(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length !== 0 ? (\n        <div>\n          <h2>Movie Cast</h2>\n          <ul className={css.castList}>\n            {cast.map(({ id, profile_path, original_name, name, character }) => (\n              <CastListItem\n                key={id}\n                id={id}\n                profilePath={profile_path}\n                originalName={original_name}\n                name={name}\n                character={character} \n              />\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <div>No cast information available</div>\n      )}\n    </>\n  );\n};\n\nexport default CastList;\n"],"names":["axios","api_key","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchMovieByQuery","_ref2","_callee2","movieName","_context2","concat","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","CastListItem","id","profilePath","originalName","name","character","_jsxs","className","css","children","_jsx","src","alt","useParams","_useState","useState","_useState2","_slicedToArray","setCast","useEffect","fetchCast","t0","console","error","_Fragment","length","map","profile_path","original_name"],"sourceRoot":""}